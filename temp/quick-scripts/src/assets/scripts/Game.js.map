{"version":3,"sources":["assets/scripts/Game.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n// 主逻辑脚本，之后还会添加计分、游戏失败和重新开始的相关逻辑\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class Game extends cc.Component {\n\n    @property(cc.Prefab)\n    starPrefab: cc.Prefab = null; // 这个属性引用了星星预制资源\n\n    // 星星产生后消失时间的随机范围\n    @property\n    maxStarDuration: number = 0;\n    @property\n    minStarDuration: number = 0;\n\n    @property(cc.Node)\n    ground: cc.Node = null; // 地面节点，用于确定星星生成的高度\n\n    @property(cc.Node)\n    player: cc.Node = null; // Player 节点，用于获取主角弹跳的高度，和控制主角行动开关\n\n    @property(cc.Label)\n    scoreDisplay: cc.Label = null; // score label 的引用\n\n    @property(cc.AudioClip)\n    scoreAudio: cc.AudioClip = null; // 得分音效资源\n\n    groundY: number = 0;\n    score: number = 0;\n    timer: number = 0;\n    startDuration: number = 0;\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n        // 获取地平面的 y 轴坐标\n        // 节点下的 y 属性对应的是锚点所在的 y 坐标，因为锚点默认在节点的中心，所以需要加上地面高度的一半才是地面的 y 坐标\n        this.groundY = this.ground.y + this.ground.height / 2;\n\n        // 初始化定时器\n        this.timer = 0;\n        // 生成一个新的星星\n        this.spawnNewStar();\n    }\n\n    start () {\n\n    }\n\n    update (dt: number) {\n        // 每帧更新计时器，超过限度还没有生成新的星星\n        // 判定游戏失败\n        if (this.timer > this.startDuration) {\n            this.gameOver();\n            return;\n        }\n        this.timer += dt;\n    }\n\n\n    spawnNewStar () {\n        // 使用给定的模版在场景中生成一个新节点\n        // instantiate() 用于克隆指定的任意类型的对象，或者从 Prefab 实例化出新节点。返回值为 Node 或者 Object\n        const newStar = cc.instantiate(this.starPrefab);\n        // 将新增的节点添加到 Canvas 节点下面\n        this.node.addChild(newStar);\n        // 为星星设置一个随机位置\n        // 设置节点在父节点坐标系中的位置\n        newStar.setPosition(this.getNewStarPosition());\n        // 在星星脚本组件上保存 Game 对象的引用\n        newStar.getComponent('Star').game = this;\n\n        // 重置定时器，根据消失时间范围随机取一个值\n        this.startDuration = this.minStarDuration + Math.random() * (this.maxStarDuration - this.minStarDuration);\n        this.timer = 0;\n    }\n\n    getNewStarPosition (): cc.Vec2 {\n        let randX = 0;\n        // 根据地平面位置和主角跳跃高度，随机得到一个星星的 y 坐标\n        // 通过 Node 下的 getComponent() 可以得到该节点上挂载的组件引用\n        const randY = this.groundY + Math.random() * this.player.getComponent('Player').jumpHeight + 50;\n        // 根据屏幕宽度，随机得到一个星星的 x 坐标\n        const maxX = this.node.width / 2;\n        randX = (Math.random() - 0.5) * 2 * maxX;\n\n        return cc.v2(randX, randY);\n    }\n\n    gainScore () {\n        this.score += 1;\n        // 更新 scoreDisplay Label 的文字\n        this.scoreDisplay.string = 'Score: ' + this.score;\n\n        // 播放得分音效\n        cc.audioEngine.playEffect(this.scoreAudio, false);\n    }\n\n    gameOver () {\n        // 停止 Player 节点的跳跃动作\n        this.player.stopAllActions();\n\n        // 重新加载场景 game\n        // cc.director 是一个管理游戏逻辑流程的单例对象\n        cc.director.loadScene('game');\n    }\n}\n"]}